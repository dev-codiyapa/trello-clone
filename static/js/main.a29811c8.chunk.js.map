{"version":3,"sources":["components/trello-card/TrelloCard.component.tsx","components/card-form/CardForm.component.tsx","redux/trello-list/ActionCreaters.ts","components/card-action-btn/CardActionBtn.component.tsx","components/trello-list/TrelloList.component.tsx","components/header/Header.component.tsx","pages/home/Home.component.tsx","App.tsx","serviceWorker.ts","redux/trello-list/reducer.ts","redux/AllReducers.ts","redux/store/store.ts","index.tsx"],"names":["TrelloCard","props","text","cardId","Card","style","marginTop","CardContent","Typography","gutterBottom","CardForm","hanldInputChange","event","textContent","target","value","setState","cardConent","addCardToList","type","listId","title","state","addList","addCard","closeCardForm","closeForm","console","log","renderCardForm","cardTitle","btnText","className","placeholder","onChange","autoFocus","Button","variant","onClick","Icon","this","React","Component","connect","list","lists","dispatch","payload","content","CardActionBtn","handleAddCard","isFormOpen","cardButton","TrelloList","cards","map","item","key","id","PrimarySearchAppBar","classes","useStyles","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","renderMobileMenu","IconButton","aria-label","color","aria-controls","aria-haspopup","grow","AppBar","position","Toolbar","noWrap","sectionDesktop","Link","href","edge","sectionMobile","makeStyles","theme","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","inputRoot","inputInput","padding","paddingLeft","transition","transitions","create","width","Home","data","card","App","window","location","hostname","match","initialState","listReducer","action","length","newList","currentList","push","listTrelloId","cardContent","requestedList","i","combineReducers","store","createStore","rootReducers","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a29811c8.chunk.js","sourcesContent":["import React from \"react\";\nimport { ITrelloCardProps } from \"./interfaces\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst TrelloCard: React.FC<ITrelloCardProps> = props => {\n  let { text,cardId } = { ...props };\n  return (\n    <>\n      <Card style={{ marginTop: \"8px\" }}>\n        <CardContent>\n          <Typography gutterBottom>{text}</Typography>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default TrelloCard;\n","import React from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\nimport \"./CardForm.component.css\";\nimport { CardContent, Button, Icon } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../../redux/trello-list/ActionCreaters\";\nimport {\n  ICardFormProps,\n  ICardFormDispatchProps,\n  ICardFormState\n} from \"./interfaces\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    list: state.lists\n  };\n};\nconst mapDispatchToProps = (dispatch: any): ICardFormDispatchProps => ({\n  addList: (title: string) => dispatch(addList(title)),\n  addCard: (listId: number, content: string) =>\n    dispatch(addCard(listId, content))\n});\nclass CardForm extends React.Component<ICardFormProps & any, ICardFormState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      cardConent: \"\"\n    };\n  }\n\n  hanldInputChange = (event: any) => {\n    const textContent = event && event.target.value;\n    this.setState({\n      cardConent: textContent\n    });\n  };\n\n  addCardToList = () => {\n    const type = this.props.type;\n    const listId = this.props.listId\n    let title = this.state.cardConent;\n    if (type == \"list\" && title) {\n      this.props.addList(title);\n    } else if (type == \"card\" && title) {\n      this.props.addCard(listId, title);\n    }\n    this.props.closeCardForm();\n  };\n\n  closeForm = () => {\n    this.props.closeCardForm();\n    console.log(\"close form 1-2-3\");\n  };\n\n  renderCardForm = () => {\n    let type = this.props.type;\n    const cardTitle =\n      type == \"list\" ? \"Enter list title...\" : \"Enter a title of this card...\";\n    const btnText = type == \"list\" ? \"Add list\" : \"Add Card\";\n    return (\n      <>\n        <div className=\"card-form\">\n          <Card>\n            <TextareaAutosize\n              placeholder={cardTitle}\n              value={this.state.cardConent}\n              className=\"card-box\"\n              onChange={this.hanldInputChange}\n              autoFocus\n            />\n          </Card>\n          <div className=\"card-form__btn_section\">\n            <Button\n              variant=\"contained\" \n              className=\"card-form__btn\"\n              onClick={this.addCardToList}\n            >\n              {btnText}\n            </Button>\n            <Icon className=\"close-card-form\" onClick={this.closeForm}>\n              close\n            </Icon>\n          </div>\n        </div>\n      </>\n    );\n  };\n  render() {\n    return this.renderCardForm();\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardForm);\n","import { IaddList, IaddCard } from \"./interfaces\";\n\nexport const addList: IaddList = (title: string) => {\n  return {\n    type: \"ADD_LIST\",\n    payload: title\n  };\n};\n\nexport const addCard: IaddCard = (listId: number, content: string) => {\n  return {\n    type: \"ADD_CARD\",\n    payload: { listId, content }\n  };\n};\n","import React from \"react\";\nimport { ICardActionBtnProps, ICardActionBtnState } from \"./interfaces\";\nimport Icon from \"@material-ui/core/Icon\";\nimport \"./CardActionBtn.component.css\";\nimport CardForm from \"../card-form/CardForm.component\";\n\nclass CardActionBtn extends React.Component<\n  ICardActionBtnProps,\n  ICardActionBtnState\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isFormOpen: false\n    };\n  }\n\n  handleAddCard = () => {\n    this.setState({\n      isFormOpen: true\n    });\n  };\n\n  closeCardForm = () => {\n    this.setState({\n      isFormOpen: false\n    });\n  };\n\n  cardButton = () => {\n    const { type} = this.props;\n    const btnText = type == \"list\" ? \"Add another list\" : \"Add another card\";\n    return (\n      <>\n        <div\n          className={type == \"list\" ? \"add-list-btn\" : \"add-card-btn\"}\n          onClick={this.handleAddCard}\n        >\n          <Icon>add</Icon>\n          <span>{btnText}</span>\n        </div>\n      </>\n    );\n  };\n\n  render() {\n    const { type, listId } = this.props;\n    return this.state.isFormOpen ? (\n      <CardForm closeCardForm={this.closeCardForm} type={type} listId={listId} />\n    ) : (\n      this.cardButton()\n    );\n  }\n}\n\nexport default CardActionBtn;\n","import React from \"react\";\nimport { ITrelloListProps } from \"./interfaces\";\nimport \"./TrelloList.component.css\";\nimport TrelloCard from \"../trello-card/TrelloCard.component\";\nimport CardActionBtn from \"../card-action-btn/CardActionBtn.component\";\n\nconst TrelloList: React.FC<ITrelloListProps> = props => {\n  let { title, cards, listId } = { ...props };\n  return (\n    <>\n      <div className=\"container\">\n        <h4>{title}</h4>\n        {cards  && cards.map(item => {\n            return <TrelloCard key={item.id} text={item.text} cardId={item.id}/>\n        })}\n        <CardActionBtn type=\"card\" listId={listId}/>\n      </div>\n    </>\n  );\n};\n\nexport default TrelloList;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport Link from \"@material-ui/core/Link\";\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: any) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <LinkedInIcon />\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <TwitterIcon />\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton> */}\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Task Manager\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <Link\n              href=\"https://www.linkedin.com/in/harekrishna-b8b91b9b/\"\n              target=\"_blank\"\n              color=\"inherit\"\n            >\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <LinkedInIcon />\n              </IconButton>\n            </Link>\n            <Link\n              href=\"https://twitter.com/a_lostdeveloper\"\n              target=\"_blank\"\n              color=\"inherit\"\n            >\n              <IconButton\n                aria-label=\"show 17 new notifications\"\n                color=\"inherit\"\n              >\n                <TwitterIcon />\n              </IconButton>\n            </Link>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\"\n    }\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  }\n}));\n","import React from \"react\";\nimport { IHomeProps, IHomeState } from \"./interfaces\";\nimport TrelloList from \"../../components/trello-list/TrelloList.component\";\nimport { connect } from \"react-redux\";\nimport \"./Home.component.css\";\nimport CardActionBtn from \"../../components/card-action-btn/CardActionBtn.component\";\nimport PrimarySearchAppBar from \"../../components/header/Header.component\";\n\nconst mapStateToProps = (state: any) => {\n  return {\n    list: state.lists\n  };\n};\n\nclass Home extends React.Component<IHomeProps, IHomeState> {\n  render() {\n    const { list } = this.props;\n    return (\n      <>\n        <PrimarySearchAppBar />\n        <div className=\"list-container\">\n          {list &&\n            list.data &&\n            list.data.map((item: any) => {\n              return (\n                <TrelloList\n                  key={item.id}\n                  title={item.title}\n                  cards={item.card}\n                  listId={item.id}\n                />\n              );\n            })}\n            <CardActionBtn type=\"list\" listId={1}/>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport Home from \"./pages/home/Home.component\";\n\nfunction App() {\n  return (\n    <>\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { IList } from \"./interfaces\";\nimport { stat } from \"fs\";\n\nconst initialState: IList = {\n  data: [\n    {\n      title: \"TO DO\",\n      id: 0,\n      card: [\n        {\n          id: 0,\n          text: \"careated first statis card\"\n        },\n        {\n          id: 1,\n          text: \"careatd second static card\"\n        }\n      ]\n    },\n    {\n      title: \"In progress\",\n      id: 1,\n      card: [\n        {\n          id: 0,\n          text: \"First task In progress\"\n        },\n      ]\n    },\n    {\n      title: \"Done\",\n      id: 2,\n      card: [\n        {\n          id: 0,\n          text: \"First task is done\"\n        },\n      ]\n    }\n  ]\n};\n\nconst listReducer = (state: any = initialState, action: any): any => {\n  switch (action.type) {\n    case \"ADD_LIST\":\n      let listId = state.data && state.data.length;\n      const newList = {\n        title: action.payload,\n        id: listId + 1,\n        card: []\n      };\n      const currentList = state.data;\n      return { ...state, ...currentList.push(newList) };\n    case \"ADD_CARD\":\n      let listTrelloId = action.payload && action.payload.listId;\n      let cardContent = action.payload && action.payload.content;\n      let data = state.data;\n      let requestedList = null;\n      for (let i = 0; i < data.length; i++) {\n        if (listTrelloId == data[i].id) {\n          requestedList = data[i];\n          break;\n        }\n      }\n      let cardId = requestedList.card && requestedList.card.length - 1;\n      requestedList.card.push({ id: cardId, text: cardContent });\n      return { ...state };\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { combineReducers } from \"redux\";\nimport listReducer from \"../redux/trello-list/reducer\";\n\nexport default combineReducers({\n  lists: listReducer\n});\n","import { createStore, Store } from \"redux\";\nimport rootReducers from \"../AllReducers\";\n\nconst store: Store<any> = createStore(rootReducers);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}